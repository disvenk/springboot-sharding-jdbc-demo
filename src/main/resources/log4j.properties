# 此句为将等级为INFO的日志信息输出到stdout、logfile、errfile这三个目的地，stdout和logfile的定义在下面的代码，可以任意起名。
# 等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL
# 如果配置OFF则不打出任何信息，如果配置为INFO这样只显示INFO, WARN, ERROR的log信息，而DEBUG信息不会被显示，具体讲解可参照第三部分定义配置文件中的logger。

######################################## logger for shiyu ########################################
log4j.rootLogger = INFO, STDOUT, DB
# 开启Mybatis的SQL打印（Mybatis中SQL语 句的日志级别被设为DEBUG），不要用上面的，否则信息会存储到s_log，导致调试很慢。
#log4j.rootLogger = DEBUG, STDOUT

# Define the STDOUT appender
log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.Target=System.out
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L - %m%n

# Define the DB appender  logdate,loglevel,logger,message,exception
log4j.appender.DB=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.DB.URL=jdbc:mysql://${mysql-url}/${mysql-database}?autoReconnect=true&amp;failOverReadOnly=false&amp;zeroDateTimeBehavior=convertToNull&amp;characterEncoding=UTF-8&amp;mysqlEncoding=utf8&amp;useUnicode=true
log4j.appender.DB.driver=com.mysql.jdbc.Driver
log4j.appender.DB.user=${mysql-user}
log4j.appender.DB.password=${mysql-password}
#警告：下面的 '%m' 是不确定的，如果错误信息中存在单引号，会导致语法错误。
log4j.appender.DB.sql=INSERT INTO s_log (logdate, logger, level, message) VALUES ("%d", "%c", "%p", "%m")
log4j.appender.DB.layout=org.apache.log4j.PatternLayout

######################################## logger for spring ########################################
log4j.logger.org.springframework=WARN, org.springframework
log4j.appender.org.springframework=org.apache.log4j.RollingFileAppender
log4j.appender.org.springframework.File = logs/spring.log
log4j.appender.org.springframework.MaxFileSize=10240KB
log4j.appender.org.springframework.Append = true
log4j.appender.org.springframework.Encoding=UTF-8
log4j.appender.org.springframework.layout=org.apache.log4j.PatternLayout
log4j.appender.org.springframework.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

######################################## logger for hibernate ########################################
log4j.logger.org.hibernate=WARN, org.hibernate
log4j.appender.org.hibernate=org.apache.log4j.RollingFileAppender
log4j.appender.org.hibernate.File = logs/hibernate.log
log4j.appender.org.hibernate.MaxFileSize=10240KB
log4j.appender.org.hibernate.Append = true
log4j.appender.org.hibernate.Encoding=UTF-8
log4j.appender.org.hibernate.layout=org.apache.log4j.PatternLayout
log4j.appender.org.hibernate.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
# 解析查询语句时记录HQL和SQL
log4j.logger.org.hibernate.hql.ast.AST=DEBUG
# 记录执行的SQL DML语句
log4j.logger.org.hibernate.SQL=trace
# 记录执行的SQL DDL语句
#log4j.logger.org.hibernate.tool.hbm2ddl=DEBUG
log4j.logger.org.hibernate.type=trace
#HQL
#log4j.logger.org.hibernate.hql=DEBUG
# 记录在清理Session缓存时,Session缓存中所有对象的状态(最多记录20个对象)
#log4j.logger.org.hibernate.pretty=DEBUG
#
log4j.logger.org.hibernate.cache=DEBUG
# 记录第二级缓存的活动
#log4j.logger.org.hibernate.transaction=DEBUG
# 记录得到的JDBC资源
#log4j.logger.org.hibernate.jdbc=DEBUG
# 记录JASS(Java Authentication and Authorization Service)授权请求
# 是一种提供安全验证和授权服务的框架
#log4j.logger.org.hibernate.secure=DEBUG

